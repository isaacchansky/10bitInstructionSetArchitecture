
LOAD 0 1 $zero    # implicit loading
AND 0 $zero $t1
ADD $load $t1       #put the factorial input into t1

AND 0 $zero, $t4
STORE 1, 1, HALT:
ADD $one, $t4

AND 0 $zero $t2
ADD $one $t2
AND 0 $t1 $beq1     #set beq1 = t1

INIT:
BEQ $beq1 $one START:

STORE 1, 1, MULT:
ADD $one, $t4
ADD $negone $beq1
BEQ $zero $zero INIT:

HALT:
STORE 0 0 $t1
HALT


START:
ADD $one $t2        #t2 starts at 2  missed
AND 0 $beq1 $t1     #t1 starts at 1


AND 0, $t4, $beq1   #beq1 gets the stack pointer
ADD $negone, $beq1
LOAD 1, 1, $beq1
BEQ $zero, 11, $load

MULT:
AND 0 $zero $t6     #clear out registers...
AND 0 $zero $t3
AND 0 $zero $t4
ADD $one $t4      #t4 = 1

BITSHIFT:
AND 1 $t4 $t2     #beq2 holds the result(0 or 1)
BEQ $zero $beq2 INC:
AND 0 $t1 $t5       #t5 is temp value
SLL $t3 $t5         #shift t5 by bit position
ADD $t5 $t6

INC:
ADD $one $t3
SLL $one, $t4
AND 1 $t4 $t4       # beq2 gets 0 if bit marker is 0
BEQ $zero $beq2 END:
BEQ $zero $zero BITSHIFT:

END:
AND 0 $t6 $t1
ADD $one $t2
ADD $negone, $beq1
LOAD 1, 1, $beq1
BEQ $zero, 11, $load
